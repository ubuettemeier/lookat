/* ---------------- Rasberry Pi vorbereiten -----------------
 *	OS Buster
 *	Kernel 5.10.63
 *	GCC 8.3.0
 *	apt 1.8.2.3 (armhf)
 *	OpenCV  3.4.9  funktioniert auf dem Raspi
 *
 *	https://downloads.raspberrypi.org/raspios_oldstable_armhf/images/raspios_oldstable_armhf-2021-12-02/
 *	2021-12-02-raspios-buster-armhf.zip
 * 
 */	

// --------------------- Links -----------------------
https://tutorials-raspberrypi.de/opencv-auf-dem-raspberry-pi-installieren/

// ----------- Dateisystem erweitern --------------
// ----------- oder raspi-config > Expand Filesystem ------------
sudo raspi-config --expand-rootfs
df -hl

// ----------- Eventuell Swap-Bereich erweitern ------------
s.auch 
https://towardsdatascience.com/installing-opencv-in-pizero-w-8e46bd42a3d3


sudo raspi-config
	Camera on
	vnc on
	ssh on

// ----------- Abh채ngigkeiten installieren -----------
sudo apt-get --allow-releaseinfo-change update

sudo apt-get update
sudo apt-get upgrade
sudo apt-get dist-upgrade
sudo apt-get autoremove

sudo apt-get install aptitude

sudo apt-get install \
     build-essential \
     checkinstall \
     cmake \
     pkg-config

// ------------------- gtk2.0 ------------------------
sudo aptitude show libgtk2.0-dev
sudo aptitude why libgtk2.0-dev
sudo aptitude search libgtk2.0-dev

// sudo apt-get install libgtk2.0-dev
sudo aptitude install libgtk2.0-dev

reboot

// ------- eventuell m체ssen folgende install's noch gemacht werden -------
sudo apt-get install \
    libtiff5-dev \
    libjpeg-dev \
    zlib1g-dev \
    libopenexr-dev \
    libgdal-dev

sudo apt-get install \
    libavcodec-dev \
    libavformat-dev \
    libmp3lame-dev \
    libswscale-dev \
    libxine2-dev \
    libv4l-dev \
    v4l-utils \
    libopencore-amrnb-dev \
    libopencore-amrwb-dev \
    libtheora-dev libvorbis-dev \
    libxvidcore-dev \
    libx264-dev \
    x264 \
    yasm
    
sudo apt-get install \
    libtbb-dev \
    libeigen3-dev    
// -----------------------------------------------------------

// ---------------- OpenCV source -----------------------
git clone https://github.com/opencv/opencv.git
git clone https://github.com/opencv/opencv_contrib.git

// ----------- 3.4.9 verwenden --------------
unzip opencv-3.4.zip
unzip opencv_contrib-3.4.zip

cd opencv
mkdir build
cd build

// Timing: 4m 29s

cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_C_EXAMPLES=OFF \
    -D INSTALL_PYTHON_EXAMPLES=OFF \
    -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
    -D BUILD_EXAMPLES=OFF ..

// ----- Funktioniert nicht -----
    -D WITH_GTK=OFF


// Timing: 2h
// make -j$(nproc)	/* funktioniert nicht. Bleibt auf dem <zero 2 w> bei 17% h채ngen */
make
sudo make install
sudo ldconfig

pkg-config --modversion opencv
pkg-config --modversion opencv4

// -------------- lookat ------------------------
git clone https://ubuettemeier@bitbucket.org/ubuettemeier/lookat.git

// ------------- N체tzliches ----------------
sudo apt-get install gedit

// ------------- visuall studio code -----------
sudo apt install code


// ----- guvcview >> insall with snap ---------
// -- guvcview funktioniert NICHT -------------
sudo apt update
sudo apt install snapd
sudo reboot
sudo snap install core
sudo snap install guvcview

/* ---------- set enveriment variable LD_LIBRARY_PATH -----------/
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/pi/c_source/lookat/libs
// --- show path ---
echo $LD_LIBRARY_PATH
ldd -v lookat | grep opencv

/* ---------- permanent LD_LIBRARY_PATH ---------------*/
touch my_lib.conf
// ------ trage den library-path in <my_lib.conf> ein -----
# path for lookat-libs
/home/pi/c_source/lookat/libs

// ------ save <my_lib.conf> in Path:/etc/ld.so.conf.d
sudo ldconfig

/* ----------- make auf zero -----------*/
make -f Makezero



